import * as io from 'io-ts';
import { Feature } from '../src';
export declare const geojsonLine: any;
export declare const geojsonMissingProperties: any;
export declare const featureGood: Feature;
export declare const featureBad: any;
export declare const MyPropType: io.InterfaceType<{
    a: io.StringType;
    b: io.NumberType;
}, io.TypeOfProps<{
    a: io.StringType;
    b: io.NumberType;
}>, io.OutputOfProps<{
    a: io.StringType;
    b: io.NumberType;
}>, io.mixed>;
export declare const MyFeatureType: io.IntersectionType<[io.InterfaceType<{
    type: io.LiteralType<"Feature">;
    geometry: io.UnionType<(io.NullType | io.UnionType<(io.IntersectionType<[io.InterfaceType<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }, io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed> | io.IntersectionType<[io.InterfaceType<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }, io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, io.mixed>;
    properties: io.Type<io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.mixed>;
}, io.TypeOfProps<{
    type: io.LiteralType<"Feature">;
    geometry: io.UnionType<(io.NullType | io.UnionType<(io.IntersectionType<[io.InterfaceType<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }, io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed> | io.IntersectionType<[io.InterfaceType<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }, io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, io.mixed>;
    properties: io.Type<io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.mixed>;
}>, io.OutputOfProps<{
    type: io.LiteralType<"Feature">;
    geometry: io.UnionType<(io.NullType | io.UnionType<(io.IntersectionType<[io.InterfaceType<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }, io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed> | io.IntersectionType<[io.InterfaceType<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }, io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, io.mixed>;
    properties: io.Type<io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.mixed>;
}>, io.mixed>, io.PartialType<{
    id: io.UnionType<(io.StringType | io.NumberType)[], string | number, string | number, io.mixed>;
    bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
}, io.TypeOfPartialProps<{
    id: io.UnionType<(io.StringType | io.NumberType)[], string | number, string | number, io.mixed>;
    bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
}>, io.OutputOfPartialProps<{
    id: io.UnionType<(io.StringType | io.NumberType)[], string | number, string | number, io.mixed>;
    bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
}>, io.mixed>], io.TypeOfProps<{
    type: io.LiteralType<"Feature">;
    geometry: io.UnionType<(io.NullType | io.UnionType<(io.IntersectionType<[io.InterfaceType<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }, io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed> | io.IntersectionType<[io.InterfaceType<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }, io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, io.mixed>;
    properties: io.Type<io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.mixed>;
}> & io.TypeOfPartialProps<{
    id: io.UnionType<(io.StringType | io.NumberType)[], string | number, string | number, io.mixed>;
    bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
}>, io.OutputOfProps<{
    type: io.LiteralType<"Feature">;
    geometry: io.UnionType<(io.NullType | io.UnionType<(io.IntersectionType<[io.InterfaceType<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }, io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed> | io.IntersectionType<[io.InterfaceType<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }, io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }>, io.mixed>, io.PartialType<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }, io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>], io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>, io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>), io.mixed>)[], (io.TypeOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.TypeOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.TypeOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, (io.OutputOfProps<{
        type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
        coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | (io.OutputOfProps<{
        type: io.LiteralType<"GeometryCollection">;
        geometries: io.ArrayType<io.IntersectionType<[io.InterfaceType<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }, io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }>, io.mixed>, io.PartialType<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }, io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>], io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>, io.mixed>, (io.TypeOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.TypeOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], (io.OutputOfProps<{
            type: io.UnionType<(io.LiteralType<"Point"> | io.LiteralType<"Polygon"> | io.LiteralType<"LineString"> | io.LiteralType<"MultiPoint"> | io.LiteralType<"MultiPolygon"> | io.LiteralType<"MultiLineString">)[], "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", "Point" | "Polygon" | "LineString" | "MultiPoint" | "MultiPolygon" | "MultiLineString", io.mixed>;
            coordinates: io.UnionType<(io.ArrayType<io.NumberType, number[], number[], io.mixed> | io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>, number[][][][], number[][][][], io.mixed>)[], number[] | number[][] | number[][][] | number[][][][], number[] | number[][] | number[][][] | number[][][][], io.mixed>;
        }> & io.OutputOfPartialProps<{
            bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
        }>)[], io.mixed>;
    }> & io.OutputOfPartialProps<{
        bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
    }>) | null, io.mixed>;
    properties: io.Type<io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.TypeOfProps<{
        a: io.StringType;
        b: io.NumberType;
    }>, io.mixed>;
}> & io.OutputOfPartialProps<{
    id: io.UnionType<(io.StringType | io.NumberType)[], string | number, string | number, io.mixed>;
    bbox: io.UnionType<(io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed> | io.ArrayType<io.ArrayType<io.ArrayType<io.NumberType, number[], number[], io.mixed>, number[][], number[][], io.mixed>, number[][][], number[][][], io.mixed>)[], number[][] | number[][][], number[][] | number[][][], io.mixed>;
}>, io.mixed>;
export declare type MFT = io.TypeOf<typeof MyFeatureType>;
export declare const myFeatureBad: any;
export declare const myFeatureGood: MFT;
